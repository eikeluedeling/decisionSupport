% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_npv.R
\name{plot_npv}
\alias{plot_npv}
\title{Net Present Value plots for Monte Carlo simulation results}
\usage{
plot_npv(
  mcSimulation_object,
  cols,
  method = "smooth_simple_overlay",
  bins = 150,
  old_names = NULL,
  new_names = NULL,
  colors = NULL,
  outlier_shape = "."
)
}
\arguments{
\item{mcSimulation_object}{is an object of Monte Carlo simulation outputs from the \code{\link[decisionSupport:mcSimulation]{mcSimulation}} function}

\item{cols}{is a list of column names containing NPV values from the \code{mcSimulation_object}. This can also be a single variable name}

\item{bins}{are the number of bins to use for the \code{\link[ggplot2:geom_histogram]{geom_histogram}}. Default number of bins is 150}

\item{old_names}{are the variable names from the MC simulation outputs that refer to the NPV values. This should be a vector of character strings. This is set to NULL with the assumption that the existing names for NPV variables are preferred}

\item{new_names}{are the variable names to replace the MC simulation outputs that refer to the NPV values. This should be a vector of character strings. This is set to NULL with the assumption that the existing names for NPV variables are preferred}

\item{colors}{is the color palette to be used for the fill of distribution shapes and boxplots. The default is c("#009999", "#0000FF", "#56B4E9", "#009E73","#F0E442", "#0072B2", "#D55E00", "#CC79A7") assuming a maximum of eight NPV variables}

\item{outlier_shape}{is the optional shape to replace the outliers in the boxplot. To show no oultiers use NA. See \code{\link[ggplot2:aes_linetype_size_shape]{shape}} for shape options}
}
\description{
Several plotting options for NPV outputs
}
\examples{
##############################################################
# Example 1 (Creating the estimate from the command line):
#############################################################
# Create the estimate object:

variable = c("revenue", "costs")
distribution = c("norm", "norm")
lower = c(10000,  5000)
upper = c(100000, 50000)
costBenefitEstimate <- as.estimate(variable, distribution, lower, upper)

# (a) Define the model function without name for the return value:

profit1 <- function(x) {
  x$revenue - x$costs
  return(list(Revenues = x$revenue,
              Costs = x$costs))
}

# Perform the Monte Carlo simulation:

predictionProfit1 <- mcSimulation(estimate = costBenefitEstimate,
                                  model_function = profit1,
                                  numberOfModelRuns = 10000,
                                  functionSyntax = "data.frameNames")


# Plot the NPV

plot_npv(mcSimulation_object = predictionProfit1, cols = c("Revenues", "Costs"),
         method = "smooth_simple_overlay")

plot_npv(mcSimulation_object = predictionProfit1, cols = c("Revenues", "Costs"),
         method = "hist_simple_overlay", bins = 30)

plot_npv(mcSimulation_object = predictionProfit1, cols = c("Revenues", "Costs"),
         method = "boxplot_density", outlier_shape = 3)
 

}
\references{
Lanzanova Denis, Cory Whitney, Keith Shepherd, and Eike Luedeling. “Improving Development Efficiency through Decision Analysis: Reservoir Protection in Burkina Faso.” Environmental Modelling & Software 115 (May 1, 2019): 164–75. \url{https://doi.org/10.1016/j.envsoft.2019.01.016}.
}
\keyword{Monte-Carlo}
\keyword{NPV}
\keyword{decision-analysis}
\keyword{decisionSupport}
\keyword{net-present-value}
\keyword{risk}
\keyword{uncertainty}
